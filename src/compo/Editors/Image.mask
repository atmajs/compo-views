let Image {
	
	var meta = {
		attributes: {
			placeholder: 'http://placehold.it/200x100',
			style: 'max-width:200px; max-height: 100px;'
		}
	};
	
	include ItemLayout {
		@element {
			ImagePicker placeholder='~[: $.xPlaceholder]' style='~[: $.xStyle]' {
				dualbind
					value='@attr.property'
					dom-slot='imagePickerChanged'
					getter='get'
					setter='set';
			}
		}
	}
}

let ImagePicker {
	
	var meta = {
		attributes: {
			placeholder: '',
			style: ''
		},
		template: 'join'
	};
	
	var url  = '';
	var blob = null;
	
	slot updateImage (event) {
		var file = event.target.files[0];		
		this.set(file);
		this.emitOut('imagePickerChanged', file);
		return false;
	}
	
	function onRenderStart () {
		this.scope.url = this.xPlaceholder;
	}
	
	function get () {
		if (this.scope.blob) {
			return this.scope.blob;
		}
		if (this.scope.url && this.scope.url !== this.xPlaceholder) {
			return this.scope.url;
		}
		return null;
	}
	function set (val) {
		if (val == null) {
			this.scope.blob = null;
			this.scope.url = this.xPlaceholder;
			return;
		}
		if (typeof val === 'string') {
			this.scope.blob = null;
			this.scope.url = val;
			return;
		}
		
		this.scope.url  = URL.createObjectURL(val);
		this.scope.blob = val;
	}
	
	table {
		tr > td > img src='~[bind: $scope.url]' style='~[: $.xStyle ]';
		tr > td {
			input type='file' x-signal='change: updateImage';
		}
	}
}